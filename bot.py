"""
–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π Telegram-–±–æ—Ç: –≤–≤–æ–¥ –§–ò–û, –æ–ø—Ä–æ—Å –ø–æ —Å–∏—Å—Ç–µ–º–∞–º, –æ—Ü–µ–Ω–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è,
—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –≤—Ä–∞—á–∞, —ç–∫—Å–ø–æ—Ä—Ç –æ—Ç—á—ë—Ç–æ–≤ –≤ Excel —Å —Ü–≤–µ—Ç–∞–º–∏, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞,
–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –æ–ø—Ä–æ—Å–∞.
"""

import logging
import os
from datetime import datetime
import pandas as pd
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ConversationHandler,
    ContextTypes,
    filters,
)
from openpyxl import load_workbook
from openpyxl.styles import PatternFill, Font, Alignment

# --------------------------
# ‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
# --------------------------
BOT_TOKEN = os.getenv("TOKEN")
ADMIN_ID = 7146954022
REPORTS_FILENAME = "reports.xlsx"

# --------------------------
# üßæ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
# --------------------------
logging.basicConfig(
    format="%(asctime)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# --------------------------
# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
# --------------------------
ASK_NAME, SELECT_DEPT, ASK_QUESTION = range(3)

# --------------------------
# –í–æ–ø—Ä–æ—Å—ã –ø–æ —Å–∏—Å—Ç–µ–º–∞–º
# --------------------------
DEPARTMENTS = {
    "ü´Å –î—ã—Ö–∞—Ç–µ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞": [
        "–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –¥–ª–∏—Ç–µ–ª—å–Ω—ã–π –∫–∞—à–µ–ª—å (–±–æ–ª—å—à–µ 2‚Äì3 –Ω–µ–¥–µ–ª—å)?",
        "–ö–∞—à–µ–ª—å —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç—Å—è –º–æ–∫—Ä–æ—Ç–æ–π? –ö–∞–∫–æ–≥–æ –æ–Ω–∞ —Ü–≤–µ—Ç–∞?",
        "–ß—É–≤—Å—Ç–≤—É–µ—Ç–µ –ª–∏ –æ–¥—ã—à–∫—É –ø—Ä–∏ –Ω–µ–±–æ–ª—å—à–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ?",
        "–ï—Å—Ç—å –ª–∏ –±–æ–ª—å –≤ –≥—Ä—É–¥–∏ –ø—Ä–∏ –¥—ã—Ö–∞–Ω–∏–∏?",
        "–ü–æ–≤—ã—à–∞–µ—Ç—Å—è –ª–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Ç–µ–ª–∞?",
        "–ë—ã–≤–∞—é—Ç –ª–∏ –Ω–æ—á–Ω—ã–µ –ø—Ä–∏—Å—Ç—É–ø—ã –∫–∞—à–ª—è –∏–ª–∏ —É–¥—É—à—å—è?",
        "–ï—Å—Ç—å –ª–∏ —Ö—Ä–∏–ø—ã –ø—Ä–∏ –¥—ã—Ö–∞–Ω–∏–∏?",
        "–ö—É—Ä–∏—Ç–µ –ª–∏ –≤—ã –∏–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∏—Ä—É–µ—Ç–µ —Å –¥—ã–º–æ–º?",
        "–ü–æ—è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–ª–∞–±–æ—Å—Ç—å, –ø–æ—Ç–ª–∏–≤–æ—Å—Ç—å, —Å–Ω–∏–∂–µ–Ω–∏–µ –º–∞—Å—Å—ã —Ç–µ–ª–∞?",
        "–ë—ã–ª–∏ –ª–∏ —É –≤–∞—Å –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –ª—ë–≥–∫–∏—Ö —Ä–∞–Ω–µ–µ?",
    ],
    "üçΩ –ü–∏—â–µ–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è (–ñ–ö–¢)": [
        "–ï—Å—Ç—å –ª–∏ –±–æ–ª–∏ –≤ –∂–∏–≤–æ—Ç–µ –∏ –≥–¥–µ –∏–º–µ–Ω–Ω–æ?",
        "–ï—Å—Ç—å –ª–∏ —Ç–æ—à–Ω–æ—Ç–∞, —Ä–≤–æ—Ç–∞ –∏–ª–∏ –∏–∑–∂–æ–≥–∞?",
        "–ú–µ–Ω—è–ª—Å—è –ª–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∏–ª–∏ —á–∞—Å—Ç–æ—Ç–∞ —Å—Ç—É–ª–∞?",
        "–ï—Å—Ç—å –ª–∏ –≤–∑–¥—É—Ç–∏–µ, —É—Ä—á–∞–Ω–∏–µ, —á—É–≤—Å—Ç–≤–æ —Ç—è–∂–µ—Å—Ç–∏?",
        "–ó–∞–º–µ—á–∞–ª–∏ –ª–∏ –∫—Ä–æ–≤—å –∏–ª–∏ —Å–ª–∏–∑—å –≤ —Å—Ç—É–ª–µ?",
        "–ï—Å—Ç—å –ª–∏ –ø–æ—Ç–µ—Ä—è –≤–µ—Å–∞ –∏–ª–∏ –∞–ø–ø–µ—Ç–∏—Ç–∞?",
        "–£–ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç–µ –ª–∏ —á–∞—Å—Ç–æ –∂–∞—Ä–µ–Ω–æ–µ, –æ—Å—Ç—Ä–æ–µ –∏–ª–∏ –∞–ª–∫–æ–≥–æ–ª—å?",
        "–ë—ã–ª–∏ –ª–∏ —Ä–∞–Ω–µ–µ –≥–∞—Å—Ç—Ä–∏—Ç, —è–∑–≤–∞, –∫–æ–ª–∏—Ç?",
        "–ù–∞–±–ª—é–¥–∞–µ—Ç—Å—è –ª–∏ –∂–µ–ª—Ç—É—à–Ω–æ—Å—Ç—å –∫–æ–∂–∏ –∏–ª–∏ –≥–ª–∞–∑?",
        "–ï—Å—Ç—å –ª–∏ –≥–æ—Ä–µ—á—å –≤–æ —Ä—Ç—É –∏–ª–∏ –±–æ–ª—å –ø–æ–¥ —Ä—ë–±—Ä–∞–º–∏?",
    ],
    "üíì –°–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç–∞—è": [
        "–ï—Å—Ç—å –ª–∏ –±–æ–ª–∏ –∏–ª–∏ –∂–∂–µ–Ω–∏–µ –∑–∞ –≥—Ä—É–¥–∏–Ω–æ–π?",
        "–í–æ–∑–Ω–∏–∫–∞–µ—Ç –ª–∏ –±–æ–ª—å –ø—Ä–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ?",
        "–ï—Å—Ç—å –ª–∏ –æ–¥—ã—à–∫–∞ –ø—Ä–∏ —Ö–æ–¥—å–±–µ –∏–ª–∏ –ø–æ–∫–æ–µ?",
        "–ë—ã–≤–∞–µ—Ç –ª–∏ —É—á–∞—â—ë–Ω–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–µ?",
        "–ë—ã–≤–∞—é—Ç –ª–∏ –ø–µ—Ä–µ–±–æ–∏ –≤ —Å–µ—Ä–¥—Ü–µ?",
        "–ï—Å—Ç—å –ª–∏ –æ—Ç—ë–∫–∏ –Ω–æ–≥ –ø–æ –≤–µ—á–µ—Ä–∞–º?",
        "–ß–∞—Å—Ç–æ –ª–∏ –ø–æ–≤—ã—à–∞–µ—Ç—Å—è –¥–∞–≤–ª–µ–Ω–∏–µ?",
        "–ë—ã–ª–∏ –ª–∏ –≥–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –æ–±–º–æ—Ä–æ–∫–∏?",
        "–ï—Å—Ç—å –ª–∏ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è —Å–µ—Ä–¥—Ü–∞?",
        "–ü—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –ª–∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã –¥–ª—è –¥–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ —Å–µ—Ä–¥—Ü–∞?",
    ],
    "üß† –ù–µ—Ä–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞": [
        "–ë–µ—Å–ø–æ–∫–æ—è—Ç –ª–∏ –≥–æ–ª–æ–≤–Ω—ã–µ –±–æ–ª–∏? –ì–¥–µ –æ–Ω–∏ –ª–æ–∫–∞–ª–∏–∑—É—é—Ç—Å—è?",
        "–ï—Å—Ç—å –ª–∏ –æ–Ω–µ–º–µ–Ω–∏–µ –≤ –∫–æ–Ω–µ—á–Ω–æ—Å—Ç—è—Ö –∏–ª–∏ –ª–∏—Ü–µ?",
        "–ë—ã–≤–∞—é—Ç –ª–∏ —Å—É–¥–æ—Ä–æ–≥–∏, –¥—Ä–æ–∂—å –∏–ª–∏ —Ç—Ä–µ–º–æ—Ä?",
        "–ï—Å—Ç—å –ª–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è —Å–Ω–∞ –∏–ª–∏ –ø–æ–≤—ã—à–µ–Ω–Ω–∞—è —Å–æ–Ω–ª–∏–≤–æ—Å—Ç—å?",
        "–ë—ã–≤–∞—é—Ç –ª–∏ —Ä–µ–∑–∫–∏–µ –ø–µ—Ä–µ–ø–∞–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏–ª–∏ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å?",
        "–ß–∞—Å—Ç–æ –ª–∏ –∫—Ä—É–∂–∏—Ç—Å—è –≥–æ–ª–æ–≤–∞?",
        "–ë—ã–ª–∏ –ª–∏ —Ç—Ä–∞–≤–º—ã –≥–æ–ª–æ–≤—ã?",
        "–ï—Å—Ç—å –ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–∞–º—è—Ç—å—é, –≤–Ω–∏–º–∞–Ω–∏–µ–º, —Ä–µ—á—å—é?",
        "–ù–∞—Ä—É—à–∞–µ—Ç—Å—è –ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏–π?",
        "–ë—ã–≤–∞–µ—Ç –ª–∏ –ø–æ—Ç–µ—Ä—è —Å–æ–∑–Ω–∞–Ω–∏—è?",
    ],
    "‚öñÔ∏è –≠–Ω–¥–æ–∫—Ä–∏–Ω–Ω–∞—è": [
        "–ë—ã—Å—Ç—Ä–∞—è —É—Ç–æ–º–ª—è–µ–º–æ—Å—Ç—å –∏–ª–∏ —Å–ª–∞–±–æ—Å—Ç—å?",
        "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤–µ—Å–∞ –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã?",
        "–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è –∂–∞–∂–¥–∞ –∏–ª–∏ —á–∞—Å—Ç–æ–µ –º–æ—á–µ–∏—Å–ø—É—Å–∫–∞–Ω–∏–µ?",
        "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è, —Ä–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å?",
        "–ß–∞—Å—Ç–æ –ª–∏ —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —Ö–æ–ª–æ–¥ –∏–ª–∏ –∂–∞—Ä?",
        "–ï—Å—Ç—å –ª–∏ —Å—É—Ö–æ—Å—Ç—å –∫–æ–∂–∏, –ª–æ–º–∫–æ—Å—Ç—å –Ω–æ–≥—Ç–µ–π, –≤—ã–ø–∞–¥–µ–Ω–∏–µ –≤–æ–ª–æ—Å?",
        "–ù–∞—Ä—É—à–µ–Ω–∏–µ —Å–Ω–∞, –∞–ø–ø–µ—Ç–∏—Ç–∞ –∏–ª–∏ –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω–æ–≥–æ —Ü–∏–∫–ª–∞?",
        "–ë—ã–ª–∏ –ª–∏ —É –≤–∞—Å –±–æ–ª–µ–∑–Ω–∏ —â–∏—Ç–æ–≤–∏–¥–Ω–æ–π –∂–µ–ª–µ–∑—ã –∏–ª–∏ –¥–∏–∞–±–µ—Ç?",
        "–ï—Å—Ç—å –ª–∏ –æ—Ç—ë–∫–∏ –ª–∏—Ü–∞ –∏–ª–∏ –∫–æ–Ω–µ—á–Ω–æ—Å—Ç–µ–π?",
        "–ü–æ—è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç—Ä–µ–º–æ—Ä –∏–ª–∏ —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–µ?",
    ],
    "ü¶¥ –û–ø–æ—Ä–Ω–æ-–¥–≤–∏–≥–∞—Ç–µ–ª—å–Ω–∞—è": [
        "–ï—Å—Ç—å –ª–∏ –±–æ–ª–∏ –≤ —Å–ø–∏–Ω–µ, —à–µ–µ –∏–ª–∏ —Å—É—Å—Ç–∞–≤–∞—Ö?",
        "–°–∫–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –ø–æ —É—Ç—Ä–∞–º –∏–ª–∏ –ø–æ—Å–ª–µ –ø–æ–∫–æ—è?",
        "–û—Ç—ë–∫–∏, –ø–æ–∫—Ä–∞—Å–Ω–µ–Ω–∏–µ –∏–ª–∏ –¥–µ—Ñ–æ—Ä–º–∞—Ü–∏—è —Å—É—Å—Ç–∞–≤–æ–≤?",
        "–ë–æ–ª—å —É—Å–∏–ª–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏?",
        "–ï—Å—Ç—å –ª–∏ –º—ã—à–µ—á–Ω–∞—è —Å–ª–∞–±–æ—Å—Ç—å?",
        "–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ—Ö–æ–¥–∫–æ–π –∏–ª–∏ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ–º?",
        "–•—Ä—É—Å—Ç –∏–ª–∏ —â–µ–ª—á–∫–∏ –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏?",
        "–ë—ã–ª–∏ –ª–∏ —Ç—Ä–∞–≤–º—ã –∫–æ—Å—Ç–µ–π –∏–ª–∏ —Å–≤—è–∑–æ–∫?",
        "–ï—Å—Ç—å –ª–∏ —É—Ç–æ–º–ª—è–µ–º–æ—Å—Ç—å –ø–æ—Å–ª–µ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏?",
        "–û–≥—Ä–∞–Ω–∏—á–µ–Ω—ã –ª–∏ –¥–≤–∏–∂–µ–Ω–∏—è –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö —á–∞—Å—Ç—è—Ö —Ç–µ–ª–∞?",
    ],
}

# --------------------------
# –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
# --------------------------
ANSWER_OPTIONS = ["–ù–µ—Ç", "–ò–Ω–æ–≥–¥–∞", "–î–∞", "–ß–∞—Å—Ç–æ"]
ANSWER_SCORES = {"–ù–µ—Ç": 0, "–ò–Ω–æ–≥–¥–∞": 1, "–î–∞": 2, "–ß–∞—Å—Ç–æ": 3}

# --------------------------
# –§—É–Ω–∫—Ü–∏–∏ –æ—Ü–µ–Ω–∫–∏
# --------------------------
def calculate_severity(total, max_total):
    ratio = total / max_total
    if ratio < 0.25:
        return "–ª—ë–≥–∫–æ–µ"
    elif ratio < 0.6:
        return "—Å—Ä–µ–¥–Ω–µ–µ"
    else:
        return "—Ç—è–∂—ë–ª–æ–µ"

def recommend_doctor(department, severity):
    doctors = {
        "ü´Å –î—ã—Ö–∞—Ç–µ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞": "–ü—É–ª—å–º–æ–Ω–æ–ª–æ–≥",
        "üçΩ –ü–∏—â–µ–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è (–ñ–ö–¢)": "–ì–∞—Å—Ç—Ä–æ—ç–Ω—Ç–µ—Ä–æ–ª–æ–≥",
        "üíì –°–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç–∞—è": "–ö–∞—Ä–¥–∏–æ–ª–æ–≥",
        "üß† –ù–µ—Ä–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞": "–ù–µ–≤—Ä–æ–ª–æ–≥",
        "‚öñÔ∏è –≠–Ω–¥–æ–∫—Ä–∏–Ω–Ω–∞—è": "–≠–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥",
        "ü¶¥ –û–ø–æ—Ä–Ω–æ-–¥–≤–∏–≥–∞—Ç–µ–ª—å–Ω–∞—è": "–û—Ä—Ç–æ–ø–µ–¥ / –†–µ–≤–º–∞—Ç–æ–ª–æ–≥",
    }
    doc = doctors.get(department, "–¢–µ—Ä–∞–ø–µ–≤—Ç")
    if severity == "—Ç—è–∂—ë–ª–æ–µ":
        return f"‚ö†Ô∏è –°—Ä–æ—á–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≤—Ä–∞—á—É: {doc}"
    elif severity == "—Å—Ä–µ–¥–Ω–µ–µ":
        return f"ü©∫ –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è: {doc}"
    return f"‚úÖ –í–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ, –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ —É {doc} –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏."

# --------------------------
# –†–∞–±–æ—Ç–∞ —Å Excel
# --------------------------
def append_report(report_row):
    df_row = pd.DataFrame([report_row])
    if os.path.exists(REPORTS_FILENAME):
        df_old = pd.read_excel(REPORTS_FILENAME, engine="openpyxl")
        df_new = pd.concat([df_old, df_row], ignore_index=True)
        df_new.to_excel(REPORTS_FILENAME, index=False, engine="openpyxl")
    else:
        df_row.to_excel(REPORTS_FILENAME, index=False, engine="openpyxl")

    wb = load_workbook(REPORTS_FILENAME)
    ws = wb.active
    for cell in ws[1]:
        cell.font = Font(bold=True)
        cell.alignment = Alignment(horizontal="center", vertical="center")

    severity_fill = {
        "–ª—ë–≥–∫–æ–µ": PatternFill(start_color="C6EFCE", end_color="C6EFCE", fill_type="solid"),
        "—Å—Ä–µ–¥–Ω–µ–µ": PatternFill(start_color="FFEB9C", end_color="FFEB9C", fill_type="solid"),
        "—Ç—è–∂—ë–ª–æ–µ": PatternFill(start_color="FFC7CE", end_color="FFC7CE", fill_type="solid"),
    }

    for row in ws.iter_rows(min_row=2, max_row=ws.max_row):
        severity = row[4].value
        if severity in severity_fill:
            for cell in row:
                cell.fill = severity_fill[severity]

    for col in ws.columns:
        max_length = 0
        col_letter = col[0].column_letter
        for cell in col:
            if cell.value:
                max_length = max(max_length, len(str(cell.value)))
        ws.column_dimensions[col_letter].width = min(max_length + 2, 50)

    wb.save(REPORTS_FILENAME)

# --------------------------
# –î–∏–∞–ª–æ–≥–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
# --------------------------
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üëã\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –§–ò–û –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ–ø—Ä–æ—Å–∞:",
        reply_markup=ReplyKeyboardRemove()
    )
    return ASK_NAME

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û–ø—Ä–æ—Å –æ—Ç–º–µ–Ω—ë–Ω.", reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

async def ask_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    name = update.message.text.strip()
    if not name:
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –§–ò–û.")
        return ASK_NAME
    context.user_data["full_name"] = name
    keyboard = [[d] for d in DEPARTMENTS.keys()] + [["–í—ã—Ö–æ–¥"]]
    await update.message.reply_text(
        f"–°–ø–∞—Å–∏–±–æ, {name}! –í—ã–±–µ—Ä–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –æ—Ä–≥–∞–Ω–∏–∑–º–∞ –¥–ª—è –æ–ø—Ä–æ—Å–∞:",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True),
    )
    return SELECT_DEPT

async def select_dept(update: Update, context: ContextTypes.DEFAULT_TYPE):
    dept = update.message.text

    if dept == "–ü—Ä–æ–π—Ç–∏ –µ—â—ë –æ–¥–∏–Ω –æ–ø—Ä–æ—Å":
        context.user_data["answers"] = {}
        context.user_data["index"] = 0
        context.user_data["department"] = None
        context.user_data["questions"] = []

        keyboard = [[d] for d in DEPARTMENTS.keys()] + [["–í—ã—Ö–æ–¥"]]
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –æ—Ä–≥–∞–Ω–∏–∑–º–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –æ–ø—Ä–æ—Å–∞:",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True),
        )
        return SELECT_DEPT

    if dept == "–í—ã—Ö–æ–¥":
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –î–æ —Å–≤–∏–¥–∞–Ω–∏—è üëã", reply_markup=ReplyKeyboardRemove())
        return ConversationHandler.END

    if dept not in DEPARTMENTS:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –∏–∑ —Å–ø–∏—Å–∫–∞.")
        return SELECT_DEPT

    context.user_data["department"] = dept
    context.user_data["questions"] = DEPARTMENTS[dept]
    context.user_data["answers"] = {}
    context.user_data["index"] = 0

    q = context.user_data["questions"][0]
    keyboard = ReplyKeyboardMarkup([[a] for a in ANSWER_OPTIONS] + [["–í—ã—Ö–æ–¥"]], resize_keyboard=True)
    await update.message.reply_text(f"–í–æ–ø—Ä–æ—Å 1/10:\n{q}", reply_markup=keyboard)
    return ASK_QUESTION

async def ask_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    answer = update.message.text
    if answer == "–í—ã—Ö–æ–¥":
        return await cancel(update, context)
    if answer not in ANSWER_OPTIONS:
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ —Å –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ.")
        return ASK_QUESTION

    idx = context.user_data["index"]
    questions = context.user_data["questions"]
    context.user_data["answers"][questions[idx]] = answer
    idx += 1
    context.user_data["index"] = idx

    if idx < len(questions):
        q = questions[idx]
        keyboard = ReplyKeyboardMarkup([[a] for a in ANSWER_OPTIONS] + [["–í—ã—Ö–æ–¥"]], resize_keyboard=True)
        await update.message.reply_text(f"–í–æ–ø—Ä–æ—Å {idx+1}/10:\n{q}", reply_markup=keyboard)
        return ASK_QUESTION

    dept = context.user_data["department"]
    answers = context.user_data["answers"]
    total = sum(ANSWER_SCORES[a] for a in answers.values())
    max_total = len(answers) * 3
    severity = calculate_severity(total, max_total)
    doctor = recommend_doctor(dept, severity)

    report = {
        "–î–∞—Ç–∞": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è": update.effective_user.id,
        "–§–ò–û": context.user_data["full_name"],
        "–°–∏—Å—Ç–µ–º–∞": dept,
        "–°—Ç–µ–ø–µ–Ω—å": severity,
        "–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ": doctor,
        "–ë–∞–ª–ª—ã": total,
        "–ò–∑": max_total,
    }
    append_report(report)

    summary = (
        f"üìã *–û–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à—ë–Ω*\n\n"
        f"–§–ò–û: {context.user_data['full_name']}\n"
        f"–°–∏—Å—Ç–µ–º–∞: {dept}\n"
        f"–°–æ—Å—Ç–æ—è–Ω–∏–µ: *{severity}*\n\n"
        f"{doctor}"
    )
    keyboard = [["–ü—Ä–æ–π—Ç–∏ –µ—â—ë –æ–¥–∏–Ω –æ–ø—Ä–æ—Å"], ["–í—ã—Ö–æ–¥"]]
    await update.message.reply_text(
        summary,
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True),
        parse_mode="Markdown"
    )

    admin_summary = (
        f"üßæ –ù–æ–≤—ã–π –æ—Ç—á—ë—Ç:\n\n"
        f"–§–ò–û: {context.user_data['full_name']}\n"
        f"–°–∏—Å—Ç–µ–º–∞: {dept}\n"
        f"–°—É–º–º–∞ –±–∞–ª–ª–æ–≤: {total}/{max_total}\n"
        f"–°–æ—Å—Ç–æ—è–Ω–∏–µ: {severity}\n"
        f"{doctor}"
    )
    await context.bot.send_message(chat_id=ADMIN_ID, text=admin_summary)

    if os.path.exists(REPORTS_FILENAME):
        with open(REPORTS_FILENAME, "rb") as f:
            await context.bot.send_document(chat_id=ADMIN_ID, document=f, filename=REPORTS_FILENAME)

    return SELECT_DEPT

async def export(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        await update.message.reply_text("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return
    if not os.path.exists(REPORTS_FILENAME):
        await update.message.reply_text("üìÅ –ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞.")
        return
    with open(REPORTS_FILENAME, "rb") as f:
        await update.message.reply_document(f, filename=REPORTS_FILENAME)

# --------------------------
# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
# --------------------------
def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            ASK_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_name)],
            SELECT_DEPT: [MessageHandler(filters.TEXT & ~filters.COMMAND, select_dept)],
            ASK_QUESTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_question)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv_handler)
    app.add_handler(CommandHandler("export", export))

    logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
    app.run_polling()

if __name__ == "__main__":
    main()
